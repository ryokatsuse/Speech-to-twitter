{"version":3,"file":"my-todo-list.js","sourceRoot":"","sources":["src/my-todo-list.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAC,MAAM,mBAAmB,CAAC;AAGjE,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAAnC;;QAEE,UAAK,GAAG,EAAE,CAAC;QAGX,cAAS,GAAG;YACV,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE;SAC9B,CAAC;IAwBJ,CAAC;IAnBC,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,SAAS,EAAC,GAAG,IAAI,CAAA;QAChC,OAAO,IAAI,CAAA;YACH,KAAK;;UAEP,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CACvB,IAAI,CAAA,OAAO,IAAI,CAAC,IAAI,OAAO,CAC1B;;;uBAGY,IAAI,CAAC,OAAO;KAC9B,CAAC;IACJ,CAAC;IAEH,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;CACA,CAAA;AA7BC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;yCAChB;AAGX;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;6CAGtB;AAGF;IADC,KAAK,CAAC,aAAa,CAAC;yCACI;AAVrB,UAAU;IADf,aAAa,CAAC,cAAc,CAAC;GACxB,UAAU,CA+Bf","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement, property, query} from 'lit/decorators.js';\n\n@customElement('my-todo-list')\nclass MyToDoList extends LitElement {\n  @property({ type: String })\n  title = '';\n\n  @property({type: Array})\n  listItems = [\n    { text: '', completed: true }\n  ];\n\n  @query('.todo-input')\n  input!: HTMLInputElement;\n\n  render() {\n    const { title, listItems} = this\n    return html`\n      <h2>${title}</h2>\n      <ul>\n        ${listItems.map((item) =>\n          html`<li>${item.text}</li>`\n          )}\n      </ul>\n      <input class=\"todo-input\" aria-label=\"アイテム\">\n      <button @click=${this.addToDo}>Add</button>\n    `;\n  }\n\naddToDo() {\n  this.listItems.push({text: this.input.value, completed: false});\n  this.input.value = '';\n  this.requestUpdate();\n}\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-todo-list': MyToDoList;\n  }\n}"]}